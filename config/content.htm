<h1>About</h1>
<p><span style="color: #808080;"><strong><a href="https://40823103.github.io/cd2021/content/index.html" style="color: #808080;">40823103 cd2021-github網頁</a> <span style="color: #000000;"> </span><span style="color: #000000;"><a href="https://40823103.github.io/stage3-ag3/content/index.html" style="color: #000000;">stage3-ag3-github網頁</a></span></strong></span></p>
<p><span style="color: #808080;"><strong><a href="https://github.com/40823103/cd2021" style="color: #808080;">40823103 cd2021-github倉儲</a>  <span style="color: #000000;"><a href="https://github.com/40823103/stage3-ag3" style="color: #000000;">stage3-ag3-github倉儲</a> </span></strong></span></p>
<p><span style="color: #808080;"><strong><a href="https://40823103.gitlab.io/cd2021/content/index.html" style="color: #808080;">40823103 cd2021-gitlab網頁</a>   <span style="color: #000000;"><a href="https://40823103.gitlab.io/stage3-ag3/content/index.html" style="color: #000000;">stage3-ag3-gitlab網頁</a></span></strong></span></p>
<p><span style="color: #808080;"><strong><a href="https://gitlab.com/40823103/cd2021" style="color: #808080;">40823103 cd2021-gitlab倉儲</a>  <span style="color: #000000;"> <a href="https://gitlab.com/40823103/stage3-ag3" style="color: #000000;">stage3-ag3-gitlab倉儲</a></span></strong></span></p>
<p><span style="color: #808080;"><strong><a href="https://fossil.kmol.info:3443/40823103/cd2021/src/main" style="color: #808080;">40823103 cd2021-gogs倉儲</a>   <span style="color: #000000;">  <a href="https://fossil.kmol.info:3443/40823103/stage3-ag3/src/main" style="color: #000000;">stage3-ag3-gogs倉儲</a></span></strong></span></p>
<p><img alt="" height="296" src="/images/1.jpg" width="296"/></p><h1>develop</h1>
<h1>stage</h1>
<p>w1</p>
<p>1.建立倉儲CMSIMDE<span>內容管理系統</span></p>
<p><span>2.分組</span></p>
<p>w2-w4</p>
<p>第一階段分組協同實習:</p>
<p>每週分組報告必須包含 html, pdf 與 Youtube 影片:</p>
<p>標題: 2021-協同產品設計實習-stage1-ag1</p>
<p>專題題目:</p>
<p>第一位組員學號:(<a href="http://www.iesensor.com/HTML5pptCV/#/">Curriculum Vitae 範例</a>)</p>
<p>第二位組員學號:(<a href="https://mde.tw/cd2021/downloads/cv_example/cv_example.html">CV 範例</a>)</p>
<p>其他組員學號:</p>
<p>交付給各組的實習任務:</p>
<ol>
<li>請在各組組長的 Github 帳號下建立各組的分組網站, 惟在 W1 進行各班定組序過程中, 發現即便採用 Ethercalc 以網際協同方式同步讓各班自選組員填入兩兩成組的學員學號, 但仍缺人工或自動定各班組序的有效方案, 在此責成各組在進行自選的協同產品開發項目之際 (W2-W4), 將此議題列為必選的題目之一, 詳細說明各組認為最有效率的第一階段與訂定組序的方法及流程.</li>
<li>此外, 為了讓各組在 stage1 分組協同實習過程, 能透過網誌發表各組組員在 W2-W4 過程中的各項作為與心得報告, 說明可利用 Leo Editor 協助 CMSiMDE 中的 Pelican 發表協同網誌, 其目的是讓各分組在協同期間, 能完整呈現各階段所留下的網誌紀錄. 但此方式必須熟悉 Leo Editor 的操作, 因此有關透過 Pelican 建立協同網誌一事, 除利用 Leo Editor 協助設定並建立 pelican 網誌外, 也將此議題列為各組在 Stage1 協同產品設計流程中必選題目之二, 請各組詳細說明採用或不採用 Leo Editor 的兩種情況下, 各組員在設定與建立協同網誌的過程所可能遭遇或產生的問題與解決方案.</li>
</ol>
<div class="d-flex flex-justify-center width-full">
<div class="d-flex flex-column"><span aria-hidden="true" class="downvoted-vote-count"></span><a href="https://github.com/mdecourse/cd2021/discussions/11">2021 協同產品設計實習 W4 分組專題報告與影片繳交處</a></div>
<h2>stage1-ag8</h2>
<p>分組倉儲:<a href="http://github.com/40823103/stage1-ag8">stage1-ag8 repo</a><span><span> </span>|分組網站:</span><span><span> </span></span><a href="http://40823107.github.io/stage1-ag8">stage1-ag8 site</a><span><span> </span>|</span></p>
<p>  個人倉儲:<a href="http://github.com/40823103/cd2021">40823103 repo</a><span><span> </span>|個人網站:</span><span><span> </span></span><a href="http://40823103.github.io/cd2021">40823103 site</a><span><span> </span>|<span> </span></span></p>
<p>  隊友倉儲:<a href="http://github.com/40823107/cd2021">40823107 repo</a><span><span> </span>|隊友網站:<span> </span></span><a href="http://40823107.github.io/cd2021">40823107 site<span> </span><span>|</span></a></p>
<h6><span>stage1-ag8 </span></h6>
<h6><span>題目:機械手臂</span></h6>
<h6><span>動機:爸爸搬重物很辛苦，希望他可以減輕負擔</span></h6>
<h3>w2</h3>
<h6><span>第二周:繪製零件圖</span></h6>
<h3>w3</h3>
<h6><span>第三周:進行coppeliasim模擬</span></h6>
<h3>w4</h3>
<h6><span>第四周:報告</span></h6>
<h2>stage2-ag8</h2>
<h3>w5</h3>
<p>工作分配</p>
<table>
<tbody>
<tr>
<td>繪製零件圖</td>
<td>40823103  呂霈瑜</td>
</tr>
<tr>
<td>模擬</td>
<td>40823107  吳嘉欣</td>
</tr>
<tr>
<td>編輯小組網頁</td>
<td>40523252  王彥筑</td>
</tr>
<tr>
<td>DPF製作</td>
<td>40823154  張宸嘉</td>
</tr>
</tbody>
</table>
<h3>w6</h3>
<p>討論主題</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/8QzeYpuuhjw" width="560"></iframe></p>
<h3>w7</h3>
<p>繪製零件</p>
<p>零件圖檔</p>
<p><a href="https://drive.google.com/drive/folders/1kBoycxcgq9d9vfMPk1pvDeQB9tQVmtWk?usp=sharing">https://drive.google.com/drive/folders/1kBoycxcgq9d9vfMPk1pvDeQB9tQVmtWk?usp=sharing</a></p>
<h3>w8</h3>
<p>心得</p>
<h3>w9</h3>
<p>報告</p>
<p><span>2021-協同產品設計實習-stage2-ag8</span><br/><span></span></p>
<p><span>倉儲:<span> </span></span><a href="https://github.com/40823107/stage2-ag8">https://github.com/40823107/stage2-ag8</a><br/><span></span></p>
<p><span>網站:<span> </span></span><a href="https://40523252.github.io/stage2-ag8/content/index.html" rel="nofollow">https://40523252.github.io/stage2-ag8/content/index.html</a><br/><span></span></p>
<p><span>reveal:<span> </span></span><a href="https://40523252.github.io/stage2-ag8/reveal/index.html#/" rel="nofollow">https://40523252.github.io/stage2-ag8/reveal/index.html#/</a></p>
<p><span>pdf: </span><a href="https://drive.google.com/file/d/1jOrYFPWgUcYDd08cUq1HYgMX8eIQJq8E/view?usp=sharing" rel="nofollow">https://drive.google.com/file/d/1jOrYFPWgUcYDd08cUq1HYgMX8eIQJq8E/view?usp=sharing</a></p>
<p></p>
<p><br/><span>YouTube:</span></p>
<p><span></span></p>
<p><span><span> <iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/t-PV7Kuksxo" width="560"></iframe></span></span><br/><span>1.</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/NVVsvlLOesE" width="560"></iframe></span><br/><span>2.</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/J2XMdp67vhA" width="560"></iframe></span><br/><span>3.</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/zpGdLqk_q4I" width="560"></iframe></span><br/><span>4.</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/pz5mESoG0lE" width="560"></iframe></span><br/><span>5.</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/j_NWZqjXt6w" width="560"></iframe></span><br/><span></span></p>
<h2>stage3-ag3</h2>
<p>第三組</p>
<p>組長:</p>
<p>1.林郁凱 40823119</p>
<p>組員:</p>
<p>2.苏鷺瑋 40823150</p>
<p>3.呂霈瑜 40823103</p>
<p>4.吳嘉欣 40823107</p>
<p>5.張宸嘉 40823154</p>
<p>6.王彥筑 40523252</p>
<h3>w10</h3>
<p><strong>建立分組倉儲,分組網頁</strong></p>
<p><span>倉儲:</span><span><a href="https://github.com/40823103/stage3-ag3">https://github.com/40823103/stage3-ag3</a></span></p>
<p><span>網頁:</span><span><a href="https://40823103.gitlab.io/stage3-ag3/content/Task1.html">https://40823103.github.io/stage3-ag3/content</a></span></p>
<p>TASK1</p>
<p>stage3_ag1|<a href="https://40823131.github.io/stage3-ag1">網站</a>|<a href="https://github.com/40823131/stage3-ag1">倉儲</a></p>
<p>40823131|網址:<a href="https://40823131.github.io/cd2021">40823131</a>|倉儲:<a href="https://github.com/40823131/cd2021">40823131</a></p>
<p>a40823112|網址:<a href="https://a40823112.github.io/cd2021">a40823112</a>|倉儲:<a href="https://github.com/a40823112/cd2021">a40823112</a></p>
<p>40823123|網址:<a href="https://40823123.github.io/cd2021">40823123</a>|倉儲:<a href="https://github.com/40823123/cd2021">40823123</a></p>
<p>40823145|網址:<a href="https://40823145.github.io/cd2021">40823145</a>|倉儲:<a href="https://github.com/40823145/cd2021">40823145</a></p>
<p>40823136|網址:<a href="https://40823136.github.io/cd2021">40823136</a>|倉儲:<a href="https://github.com/40823136/cd2021">40823136</a></p>
<p>40823109|網址:<a href="https://40823109.github.io/cd2021">40823109</a>|倉儲:<a href="https://github.com/40823109/cd2021">40823109</a></p>
<p>40823116|網址:<a href="https://40823116.github.io/cd2021">40823116</a>|倉儲:<a href="https://github.com/40823116/cd2021">40823116</a></p>
<p>40823108|網址:<a href="https://40823108.github.io/cd2021">40823108</a>|倉儲:<a href="https://github.com/40823108/cd2021">40823108</a></p>
<p>stage3_ag2|<a href="https://40823151.github.io/stage3-ag2">網站</a>|<a href="https://github.com/40823151/stage3-ag2">倉儲</a></p>
<p>40823151|網址:<a href="https://40823151.github.io/cd2021">40823151</a>|倉儲:<a href="https://github.com/40823151/cd2021">40823151</a></p>
<p>40623121|網址:<a href="https://40623121.github.io/cd2021">40623121</a>|倉儲:<a href="https://github.com/40623121/cd2021">40623121</a></p>
<p>40871106|網址:<a href="https://40871106.github.io/cd2021">40871106</a>|倉儲:<a href="https://github.com/40871106/cd2021">40871106</a></p>
<p>40823102|網址:<a href="https://40823102.github.io/cd2021">40823102</a>|倉儲:<a href="https://github.com/40823102/cd2021">40823102</a></p>
<p>40823104|網址:<a href="https://40823104.github.io/cd2021">40823104</a>|倉儲:<a href="https://github.com/40823104/cd2021">40823104</a></p>
<p>40823106|網址:<a href="https://40823106.github.io/cd2021">40823106</a>|倉儲:<a href="https://github.com/40823106/cd2021">40823106</a></p>
<p>40823101|網址:<a href="https://40823101.github.io/cd2021">40823101</a>|倉儲:<a href="https://github.com/40823101/cd2021">40823101</a></p>
<p>40823132|網址:<a href="https://40823132.github.io/cd2021">40823132</a>|倉儲:<a href="https://github.com/40823132/cd2021">40823132</a></p>
<p>stage3_ag3|<a href="https://40823119.github.io/stage3-ag3">網站</a>|<a href="https://github.com/40823119/stage3-ag3">倉儲</a></p>
<p>40823119|網址:<a href="https://40823119.github.io/cd2021">40823119</a>|倉儲:<a href="https://github.com/40823119/cd2021">40823119</a></p>
<p>40823150|網址:<a href="https://40823150.github.io/cd2021">40823150</a>|倉儲:<a href="https://github.com/40823150/cd2021">40823150</a></p>
<p>40823103|網址:<a href="https://40823103.github.io/cd2021">40823103</a>|倉儲:<a href="https://github.com/40823103/cd2021">40823103</a></p>
<p>40823107|網址:<a href="https://40823107.github.io/cd2021">40823107</a>|倉儲:<a href="https://github.com/40823107/cd2021">40823107</a></p>
<p>40523252|網址:<a href="https://40523252.github.io/cd2021">40523252</a>|倉儲:<a href="https://github.com/40523252/cd2021">40523252</a></p>
<p>40823154|網址:<a href="https://40823154.github.io/cd2021">40823154</a>|倉儲:<a href="https://github.com/40823154/cd2021">40823154</a></p>
<p>stage3_ag4|<a href="https://40823142.github.io/stage3-ag4">網站</a>|<a href="https://github.com/40823142/stage3-ag4">倉儲</a></p>
<p>40823142|網址:<a href="https://40823142.github.io/cd2021">40823142</a>|倉儲:<a href="https://github.com/40823142/cd2021">40823142</a></p>
<p>40823144|網址:<a href="https://40823144.github.io/cd2021">40823144</a>|倉儲:<a href="https://github.com/40823144/cd2021">40823144</a></p>
<p>40823127|網址:<a href="https://40823127.github.io/cd2021">40823127</a>|倉儲:<a href="https://github.com/40823127/cd2021">40823127</a></p>
<p>40823148|網址:<a href="https://40823148.github.io/cd2021">40823148</a>|倉儲:<a href="https://github.com/40823148/cd2021">40823148</a></p>
<p>40823121|網址:<a href="https://40823121.github.io/cd2021">40823121</a>|倉儲:<a href="https://github.com/40823121/cd2021">40823121</a></p>
<p>40823135|網址:<a href="https://40823135.github.io/cd2021">40823135</a>|倉儲:<a href="https://github.com/40823135/cd2021">40823135</a></p>
<p>40823114|網址:<a href="https://40823114.github.io/cd2021">40823114</a>|倉儲:<a href="https://github.com/40823114/cd2021">40823114</a></p>
<p>40823146|網址:<a href="https://40823146.github.io/cd2021">40823146</a>|倉儲:<a href="https://github.com/40823146/cd2021">40823146</a></p>
<p>stage3_ag5|<a href="https://40823111.github.io/stage3-ag5">網站</a>|<a href="https://github.com/40823111/stage3-ag5">倉儲</a></p>
<p>40823111|網址:<a href="https://40823111.github.io/cd2021">40823111</a>|倉儲:<a href="https://github.com/40823111/cd2021">40823111</a></p>
<p>40823115|網址:<a href="https://40823115.github.io/cd2021">40823115</a>|倉儲:<a href="https://github.com/40823115/cd2021">40823115</a></p>
<p>40823128|網址:<a href="https://40823128.github.io/cd2021">40823128</a>|倉儲:<a href="https://github.com/40823128/cd2021">40823128</a></p>
<p>40823120|網址:<a href="https://40823120.github.io/cd2021">40823120</a>|倉儲:<a href="https://github.com/40823120/cd2021">40823120</a></p>
<p>40823140|網址:<a href="https://40823140.github.io/cd2021">40823140</a>|倉儲:<a href="https://github.com/40823140/cd2021">40823140</a></p>
<p>40823124|網址:<a href="https://40823124.github.io/cd2021">40823124</a>|倉儲:<a href="https://github.com/40823124/cd2021">40823124</a></p>
<p>40823139|網址:<a href="https://40823139.github.io/cd2021">40823139</a>|倉儲:<a href="https://github.com/40823139/cd2021">40823139</a></p>
<p>40823126|網址:<a href="https://40823126.github.io/cd2021">40823126</a>|倉儲:<a href="https://github.com/40823126/cd2021">40823126</a></p>
<p>stage3_ag6|<a href="https://40823152.github.io/stage3-ag6">網站</a>|<a href="https://github.com/40823152/stage3-ag6">倉儲</a></p>
<p>40823152|網址:<a href="https://40823152.github.io/cd2021">40823152</a>|倉儲:<a href="https://github.com/40823152/cd2021">40823152</a></p>
<p>40823110|網址:<a href="https://40823110.github.io/cd2021">40823110</a>|倉儲:<a href="https://github.com/40823110/cd2021">40823110</a></p>
<p>40823122|網址:<a href="https://40823122.github.io/cd2021">40823122</a>|倉儲:<a href="https://github.com/40823122/cd2021">40823122</a></p>
<p>40823125|網址:<a href="https://40823125.github.io/cd2021">40823125</a>|倉儲:<a href="https://github.com/40823125/cd2021">40823125</a></p>
<p>40823117|網址:<a href="https://40823117.github.io/cd2021">40823117</a>|倉儲:<a href="https://github.com/40823117/cd2021">40823117</a></p>
<p>40823129|網址:<a href="https://40823129.github.io/cd2021">40823129</a>|倉儲:<a href="https://github.com/40823129/cd2021">40823129</a></p>
<p>40823149|網址:<a href="https://40823149.github.io/cd2021">40823149</a>|倉儲:<a href="https://github.com/40823149/cd2021">40823149</a></p>
<p>40823153|網址:<a href="https://40823153.github.io/cd2021">40823153</a>|倉儲:<a href="https://github.com/40823153/cd2021">40823153</a></p>
<p></p>
<p>參考40823122修改</p>
<p><span>讀取 </span><a href="http://mde.tw/cd2021/downloads/stage3/stage3_2a.txt">stage3_2a.txt</a></p>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false"># open file, default is read mode, since txt content no chinese char4
# no encoding = "UTF-08" is needed
with open("stage3_2a.txt") as fh:
    # readlines will read into the whole line and put into list format 23
    # has \n at the end of each line 13
    data = fh.readlines()
    data = [a.replace('4823122','40823122') for a in data]
    data = [c.replace('\t\t\t\t','') for c in data]
    print(data)
#print(len(data))1
for i in range(len(data)):
    group = data[i].rstrip("\n").split("\t")
    print('&lt;p&gt;'+group[0]+'|&lt;a href="https://'+group[1]+'.github.io/stage3-ag'+group[0][9]+'"&gt;網站&lt;/a&gt;|&lt;a href="https://github.com/'+group[2]+'/stage3-ag'+group[0][9]+'"&gt;倉儲&lt;/a&gt;&lt;/p&gt;')
# the following will use group data to generate needed html
   
    for j in range(2,18,2):
        try:
            print('&lt;p&gt;'+group[j]+'|網址:'+'&lt;a href="https://'+group[j]+'.github.io/cd2021'+'"&gt;'+group[j]+'&lt;/a&gt;'+'|倉儲:'+'&lt;a href="https://github.com/'+group[j]+'/cd2021'+'"&gt;'+group[j]+'&lt;/a&gt;&lt;/p&gt;')
        except:
            continue</pre>
<p><br/><br/></p>
<p></p>
<p><strong><span style="color: #000000;">以下為每組亂數抽選 2 名組員的程式碼:</span></strong></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false"># open file, default is read mode, since txt content no chinese char
# no encoding = "UTF-8" is needed
import random
 
# number of group menber to draw
num = 2
 
# check if data is "" or not
def notVacant(data):
    if data == "":
        return False
    else:
        return True
         
with open("stage3_2a.txt") as fh:
    # readlines will read into the whole line and put into list format
    # has \n at the end of each line
    data = fh.readlines()
#print(len(data))
# big group list
bgroup = []
# count from the second group member
sgroup = []
for i in range(len(data)):
    group = data[i].rstrip("\n").split("\t")
    #print(group)
    # use mem to count the total number of each group
    mem = 0
    # final group data
    fgroup = []
    # count from the second group member, eliminate the first element
    sgroup = group[1:]
    # get only the odd index number
    igroup = [i for i in range(len(sgroup)) if i % 2 == 1]
    for j in igroup:
        # index starts from 0 which is j-1 when j=1
        if notVacant(sgroup[j-1]) == True:
            mem += 1
            fgroup.append(sgroup[j-1])
    print("group " + str(i+1) + ":" + str(mem))
    # shuffle the fgroup list
    random.shuffle(fgroup)
    # draw num of member from final group list: fgroup
    for k in range(num):
        try:
            print(fgroup[k])
        except:
            # num is greater than total number of this group
            print("no such member")
    # seperator
    print("-"*20)
# the following will use group data to generate needed html</pre>
<p>TASK2</p>
<h4 class="title style-scope ytd-video-primary-info-renderer"><yt-formatted-string class="style-scope ytd-video-primary-info-renderer" force-default-style="">CoppeliaSim 場景 remote API 協同監控流程</yt-formatted-string></h4>
<p></p>
<h4 class="title style-scope ytd-video-primary-info-renderer"><yt-formatted-string class="style-scope ytd-video-primary-info-renderer" force-default-style=""><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/ndEd9lHBDvc" width="560"></iframe></yt-formatted-string></h4>
<p></p>
<h3>w11</h3>
<p></p>
<p>參考的主題</p>
<p><a href="https://weheartit.com/entry/301240914">https://weheartit.com/entry/301240914</a></p>
<p><img alt="" height="500" src="/images/original.gif" width="500"/></p>
<p></p>
<p><img alt="" height="268" src="/images/螢幕擷取畫面 2021-06-08 192312.png" width="500"/></p>
<p><img alt="" height="298" src="/images/97.png" width="500"/></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p><h3>w12</h3>
<h4 class="title style-scope ytd-video-primary-info-renderer"><yt-formatted-string class="style-scope ytd-video-primary-info-renderer" force-default-style="">stage3-ag3直播討論</yt-formatted-string></h4>
<p><a href="https://www.youtube.com/watch?v=rVUHxxyfRlk"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/rVUHxxyfRlk" width="560"></iframe></a></p>
<h3>w13</h3>
<p><span>robodk測試</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/3LSVuCKULK4" width="560"></iframe></p>
<h3>w14</h3>
<h3>w15</h3>
<p>Github倉儲系統flag，改用gitlab系統繼續推送</p>
<p><a href="https://gitlab.com/40823103/cd2021">40823103 Gitlab 倉儲</a></p>
<p><a href="https://40823103.gitlab.io/cd2021/content/index.html">40823103 Gitlab 網頁</a></p>
<p><img alt="" height="254" src="/images/99.png" width="500"/></p>
<p></p>
<p><a href="https://gitlab.com/40823103/stage3-ag3">40823103 stage3-ag3 倉儲</a></p>
<p><a href="https://40823103.gitlab.io/stage3-ag3/content/index.html">40823103 stage3-ag3 網頁</a></p>
<p><img alt="" height="254" src="/images/98.png" width="500"/></p>
<h1>w16</h1>
<h4>MTB_robot 的取放方塊流程規劃 (Process Planning):</h4>
<h4>1. Onshape 零組件繪製 (20%)</h4>
<p>零組件必須在<span> </span><a href="https://www.onshape.com/">Onshape</a><span> </span>繪圖, 並提供可公開分享之零組件連結於頁面及回報區中.</p>
<h4>2. 建立 CoppeliaSim 4.1.0 MTB robot 場景 (20%)</h4>
<p>請以自行繪製之零件輸入 CoppeliaSim 後, 組合為 MTB robot 模型, 並利用 Leo Editor 以 require 導入 Lua 程式運作, 分別控制各軸轉動示範, 所完成的所有檔案請存入 W16_exam 後壓縮為 W16_exam.7z 後送至個人 @gm 帳號下的 Google Drive 後將連結設為任何人皆可下載, 並將連結與操作嵌入影片放在 W16 頁面與回報區中 .</p>
<h4>3. 手臂末端加入 components-gripper-suction pad 吸盤 (20%)</h4>
<p>請接續上述 MTB robot, 在其末端接上 force sensor 後接上標準 suction pad 後, 分別導入 W15 週線上課程之鍵盤控制程式後, 拍攝影片示範 W15 線上課程中之操作與示範過程.</p>
<h4>4. 逆向運動學函式 (20%)</h4>
<p>請根據 W15 線上課程內容之 Inverse Kinematics 方程式 (<a href="https://www.youtube.com/watch?v=IKOGwoJ2HLk&amp;t=35s">影片1</a><span> </span>或<a href="https://www.youtube.com/watch?v=eIZuz1XCd0w&amp;t=183s">影片2</a>), 以程式指定方塊取放之兩個位置 - (0.2, 0.7, 0.05) 與 (-0.3, -0.55, 0.05), 以前述 Leo Editor Lua 程式編寫方法, 分別採鍵盤控制與程式迴圈方式執行 W15 兩個指定位置之方塊取放.</p>
<h4>5. Python remote API 逆向運動學函式 (20%)</h4>
<p>請利用 Python remote API 程式重現以迴圈方式執行 W15 兩個指定位置之方塊取放.</p>
<h4></h4>
<h2>Onshape 零組件繪製</h2>
<p><img alt="" height="254" src="/images/螢幕擷取畫面 2021-06-14 153305.png" width="500"/></p>
<p><a href="https://cad.onshape.com/documents/7549c52d10162f50c53865f1/w/d798dfa22dd3358928a0dc9f/e/3eb21ff0f1f0b71759b83495">40823103 Onshape 零組件繪製</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/bJHSWYNMtSg" width="560"></iframe></p>
<h2>建立 CoppeliaSim 4.1.0 MTB robot 場景</h2>
<p><img alt="" height="267" src="/images/螢幕擷取畫面 2021-06-14 163230.png" width="500"/></p>
<p>用onshape匯出的stl檔</p>
<p><a href="https://drive.google.com/drive/folders/1DSeQvPJuZXVAcCSRxFr_PTIVhLE7EcS9?usp=sharing">coppeliasim 40823103.stl</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/e-W6tL0SuEA" width="560"></iframe></p>
<h2>手臂末端加入 components-gripper-suction pad 吸盤</h2>
<p></p>
<p>加入suction pad 吸盤</p>
<p><img alt="" height="268" src="/images/3.png" width="500"/></p>
<p></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/T_1j5dkVDQg" width="560"></iframe></p>
<p></p>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init() 
    objectHandle=sim.getObjectHandle('suctionPad')
    sim.setUserParameter(objectHandle,'@enable','')
    modelBase=sim.getObjectAssociatedWithScript(sim.handle_self)
    robotBase=modelBase
    while true do
        robotBase=sim.getObjectParent(robotBase)
        if robotBase==-1 then
            robotName='Dobot'
            break
        end
        robotName=sim.getObjectName(robotBase)
        suffix,suffixlessName=sim.getNameSuffix(robotName)
        if suffixlessName=='Dobot' then
            break
        end
    end
 
    s=sim.getObjectHandle('suctionPadSensor')
    l=sim.getObjectHandle('suctionPadLoopClosureDummy1')
    l2=sim.getObjectHandle('suctionPadLoopClosureDummy2')
    b=sim.getObjectHandle('suctionPad')
    suctionPadLink=sim.getObjectHandle('suctionPadLink')
    local gripperBase=sim.getObjectAssociatedWithScript(sim.handle_self)
 
    infiniteStrength=sim.getScriptSimulationParameter(sim.handle_self,'infiniteStrength')
    maxPullForce=sim.getScriptSimulationParameter(sim.handle_self,'maxPullForce')
    maxShearForce=sim.getScriptSimulationParameter(sim.handle_self,'maxShearForce')
    maxPeelTorque=sim.getScriptSimulationParameter(sim.handle_self,'maxPeelTorque')
 
    sim.setLinkDummy(l,-1)
    sim.setObjectParent(l,b,true)
    m=sim.getObjectMatrix(l2,-1)
    sim.setObjectMatrix(l,-1,m)
end
 
function sysCall_cleanup() 
    sim.setLinkDummy(l,-1)
    sim.setObjectParent(l,b,true)
    m=sim.getObjectMatrix(l2,-1)
    sim.setObjectMatrix(l,-1,m)
end 
 
function sysCall_sensing() 
    parent=sim.getObjectParent(l)
    local sig=sim.getIntegerSignal("pad_switch")
    if (not sig) or (sig==0) then
        if (parent~=b) then
            sim.setLinkDummy(l,-1)
            sim.setObjectParent(l,b,true)
            m=sim.getObjectMatrix(l2,-1)
            sim.setObjectMatrix(l,-1,m)
        end
    else
        if (parent==b) then
            index=0
            while true do
                shape=sim.getObjects(index,sim.object_shape_type)
                if (shape==-1) then
                    break
                end
                local res,val=sim.getObjectInt32Parameter(shape,sim.shapeintparam_respondable)
                if (shape~=b) and (val~=0) and (sim.checkProximitySensor(s,shape)==1) then
                    -- Ok, we found a respondable shape that was detected
                    -- We connect to that shape:
                    -- Make sure the two dummies are initially coincident:
                    sim.setObjectParent(l,b,true)
                    m=sim.getObjectMatrix(l2,-1)
                    sim.setObjectMatrix(l,-1,m)
                    -- Do the connection:
                    sim.setObjectParent(l,shape,true)
                    sim.setLinkDummy(l,l2)
                    break
                end
                index=index+1
            end
        else
            -- Here we have an object attached
            if (infiniteStrength==false) then
                -- We might have to conditionally beak it apart!
                result,force,torque=sim.readForceSensor(suctionPadLink) -- Here we read the median value out of 5 values (check the force sensor prop. dialog)
                if (result&gt;0) then
                    breakIt=false
                    if (force[3]&gt;maxPullForce) then breakIt=true end
                    sf=math.sqrt(force[1]*force[1]+force[2]*force[2])
                    if (sf&gt;maxShearForce) then breakIt=true end
                    if (torque[1]&gt;maxPeelTorque) then breakIt=true end
                    if (torque[2]&gt;maxPeelTorque) then breakIt=true end
                    if (breakIt) then
                        -- We break the link:
                        sim.setLinkDummy(l,-1)
                        sim.setObjectParent(l,b,true)
                        m=sim.getObjectMatrix(l2,-1)
                        sim.setObjectMatrix(l,-1,m)
                    end
                end
            end
        end
    end
end</pre>
<p></p>
<h2>逆向運動學函式</h2>
<h4><span>以程式指定方塊取放之兩個位置 - (0.2, 0.7, 0.05) 與 (-0.3, -0.55, 0.05)</span></h4>
<p><img alt="" height="267" src="/images/4.png" width="500"/></p>
<p></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/rAECrrEOgDU" width="560"></iframe></p>
<p></p>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">function moving(x,y)
    a=0.4
    b=0.4
    c=math.pow((math.pow(x,2)+math.pow(y,2)),0.5)
    s=(a+b+c)/2
    area=math.pow((s*(s-a)*(s-b)*(s-c)),0.5)
    h=area/(2*c)
    deg1_base=math.atan(x/y)
    if x&lt;0 and y&lt;0 then
        deg1_base=deg1_base+math.pi
    end
    deg1_tri=math.asin(h/a)
    deg1=deg1_base+deg1_tri
    deg2=math.pi-(0.5*math.pi-deg1_tri)-math.acos(h/b)
    deg3=deg2-deg1
    sim.setJointTargetPosition(joint01,deg1)
    sim.setJointTargetPosition(joint02,-deg2)
    sim.setJointTargetPosition(joint03,deg3)
end

function sysCall_threadmain()
    joint01=sim.getObjectHandle('joint1')
    joint02=sim.getObjectHandle('joint2')
    joint03=sim.getObjectHandle('joint3')
    jointz=sim.getObjectHandle('jointz')
    sim.setJointTargetPosition(joint01,0)
    sim.setJointTargetPosition(joint02,0)
    sim.setJointTargetPosition(joint03,0)
    sim.setJointTargetPosition(jointz,0)
    sim.setIntegerSignal("pad_switch",1)
    sim.setJointTargetPosition(jointz,-0.075)
    sim.wait(4)
    sim.setJointTargetPosition(jointz,0)
    sim.wait(4)
    while sim.getSimulationState()~=sim.simulation_advancing_abouttostopre do
    moving(0.2,0.7)
    sim.wait(4)
    sim.setIntegerSignal("pad_switch",0)
    sim.wait(4)
    sim.setIntegerSignal("pad_switch",1)
    sim.setJointTargetPosition(jointz,-0.075)
    sim.wait(4)
    sim.setJointTargetPosition(jointz,0)
    sim.wait(4)
    moving(-0.3,-0.55)
    sim.wait(4)
    sim.setIntegerSignal("pad_switch",0)
    sim.wait(4)
    sim.setIntegerSignal("pad_switch",1)
    sim.setJointTargetPosition(jointz,-0.075)
    sim.wait(4)
    sim.setJointTargetPosition(jointz,0)
    sim.wait(4)
    end
end</pre>
<p></p>
<h2>Python remote API 逆向運動學函式</h2>
<p><span>利用 Python remote API 程式</span></p>
<p><img alt="" height="268" src="/images/5.png" width="500"/></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Fa4Qf5w1Y6k" width="560"></iframe></p>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">import sim as vrep
import math
import random
import time
import math

def moving (x,y):
    a=0.4
    b=0.4
    c=math.pow((math.pow(x,2)+math.pow(y,2)),0.5)
    s=(a+b+c)/2
    area=math.pow((s*(s-a)*(s-b)*(s-c)),0.5)
    h=area/(2*c)
    deg1_base=math.atan(x/y)
    if x&lt;0 and y&lt;0 :
        deg1_base=deg1_base+math.pi
    end
    deg1_tri=math.asin(h/a)
    deg1=deg1_base+deg1_tri
    deg2=math.pi-(0.5*math.pi-deg1_tri)-math.acos(h/b)
    deg3=deg2-deg1
    vrep.simxSetJointTargetPosition(clientID,deg1,0,opmode)
    vrep.simxSetJointTargetPosition(clientID,-deg2,0,opmode)
    vrep.simxSetJointTargetPosition(clientID,deg3,0,opmode)
    
print ('Start')
 
vrep.simxFinish(-1)
 
clientID = vrep.simxStart('127.0.0.1', 19997, True, True, 5000, 5)

if clientID != -1:
    print ('Connected to remote API server')

    res = vrep.simxAddStatusbarMessage(
        clientID, "40823103 ",
        vrep.simx_opmode_oneshot)
    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):
        print("Could not add a message to the status bar.")


    opmode = vrep.simx_opmode_oneshot_wait
    STREAMING = vrep.simx_opmode_streaming


    vrep.simxStartSimulation(clientID, opmode)
    ret,joint01=vrep.simxGetObjectHandle(clientID,"joint1",opmode)
    ret,joint02=vrep.simxGetObjectHandle(clientID,"joint2",opmode)
    ret,joint03=vrep.simxGetObjectHandle(clientID,"joint3",opmode)
    ret,jointz=vrep.simxGetObjectHandle(clientID,"jointz",opmode)
    
    vrep.simxSetJointTargetPosition(clientID,joint01,0,opmode)
    vrep.simxSetJointTargetPosition(clientID,joint02,0,opmode)
    vrep.simxSetJointTargetPosition(clientID,joint03,0,opmode)
    vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)
    vrep.simxSetJointTargetPosition(clientID,jointz,-0.07,opmode)
    time.sleep(2)
    vrep.simxSetJointTargetPosition(clientID,jointz,0,opmode)
    time.sleep(2)
    moving:(0.2,0.7)
    time.sleep(2)
    vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)
    time.sleep(2)
    vrep.simxSetJointTargetPosition(clientID,jointz,-0.07,opmode)
    time.sleep(2)
    vrep.simxSetJointTargetPosition(clientID,jointz,0,opmode)
    time.sleep(2)
    moving:(-0.3,-0.55)
    time.sleep(2)
    vrep.simxSetIntegerSignal(clientID,"pad_switch",0,opmode)
    time.sleep(2)
    vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)
    vrep.simxSetJointTargetPosition(clientID,jointz,-0.07,opmode)
    time.sleep(2)
    vrep.simxSetJointTargetPosition(clientID,jointz,0,opmode)</pre>
<p><br/><br/></p>
<p></p>
<h1>問題</h1>
<h2>gogs</h2>
<p><span>Github flaged 用戶, 利用 </span><a href="https://gogs.io/">gogs</a><span><span> </span>系統替代</span></p>
<p><span>到<a href="https://fossil.kmol.info:3443">https://fossil.kmol.info:3443</a></span></p>
<p><span>新增儲存庫</span></p>
<p><span><img alt="" height="254" src="/images/gogs1.png" width="500"/></span></p>
<p><span>然後到cd2021輸入</span></p>
<p><img alt="" height="255" src="/images/gogs2.png" width="500"/><br/>git remote add fossil https://fossil.kmol.info:3443/帳號/倉儲名稱.git</p>
<p>git push fossil</p>
<p></p>
<p><span></span></p>
<p><span></span></p>
<p><span></span></p>
<h2>flag</h2>
<p>突然出現 Your avvount has been flagged.</p>
<p><img alt="" height="322" src="/images/1621490494700.jpg" width="500"/></p>
<p><img alt="" height="296" src="/images/flag3.png" width="500"/></p>
<p><span>老師建議將內容修改一下, 用現在的 .git 版本內容, 同步到一個同名的 gitlab 帳號下.</span></p>
<p><span>到<a href="https://gitlab.com/">https://gitlab.com/</a>註冊帳號</span></p>
<p><img alt="" height="165" src="/images/flag4.png" width="500"/></p>
<p></p>
<p></p>
<p>2021年5月20日寄給github</p>
<p><img alt="" height="234" src="/images/flag.png" width="500"/></p>
<p><span>2021年6月5日寄回 已解除flag</span></p>
<p><img alt="" height="216" src="/images/flag2.png" width="500"/></p>
<p></p>
<p><span></span></p>
<p><span> </span></p>
</div>