var tipuesearch = {"pages": [{'title': 'About', 'text': 'github 網頁 : https://40823103.github.io/cd2021/content/index.html \xa0 \n github倉儲: https://github.com/40823103/cd2021 \n gitlab 網頁 : https://40823103.gitlab.io/cd2021/content/index.html \xa0 \n gitlab倉儲: https://gitlab.com/40823103/cd2021 \n gogs倉儲: https://fossil.kmol.info:3443/40823103/cd2021/src/main \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'develop', 'text': '', 'tags': '', 'url': 'develop.html'}, {'title': 'topics', 'text': '', 'tags': '', 'url': 'topics.html'}, {'title': 'w1', 'text': '1.建立倉儲CMSIMDE 內容管理系統 \n 2.分組 \n', 'tags': '', 'url': 'w1.html'}, {'title': 'w2-w4', 'text': '第一階段分組協同實習: \n 每週分組報告必須包含 html, pdf 與 Youtube 影片: \n 標題: 2021-協同產品設計實習-stage1-ag1 \n 專題題目: \n 第一位組員學號:( Curriculum Vitae 範例 ) \n 第二位組員學號:( CV 範例 ) \n 其他組員學號: \n 交付給各組的實習任務: \n \n 請在各組組長的 Github 帳號下建立各組的分組網站, 惟在 W1 進行各班定組序過程中, 發現即便採用 Ethercalc 以網際協同方式同步讓各班自選組員填入兩兩成組的學員學號, 但仍缺人工或自動定各班組序的有效方案, 在此責成各組在進行自選的協同產品開發項目之際 (W2-W4), 將此議題列為必選的題目之一, 詳細說明各組認為最有效率的第一階段與訂定組序的方法及流程. \n 此外, 為了讓各組在 stage1 分組協同實習過程, 能透過網誌發表各組組員在 W2-W4 過程中的各項作為與心得報告, 說明可利用 Leo Editor 協助 CMSiMDE 中的 Pelican 發表協同網誌, 其目的是讓各分組在協同期間, 能完整呈現各階段所留下的網誌紀錄. 但此方式必須熟悉 Leo Editor 的操作, 因此有關透過 Pelican 建立協同網誌一事, 除利用 Leo Editor 協助設定並建立 pelican 網誌外, 也將此議題列為各組在 Stage1 協同產品設計流程中必選題目之二, 請各組詳細說明採用或不採用 Leo Editor 的兩種情況下, 各組員在設定與建立協同網誌的過程所可能遭遇或產生的問題與解決方案. \n \n \n \n 2021 協同產品設計實習 W4 分組專題報告與影片繳交處 \n', 'tags': '', 'url': 'w2-w4.html'}, {'title': 'stage1-ag8', 'text': '分組倉儲: stage1-ag8 repo \xa0 |分組網站: \xa0 stage1-ag8 site \xa0 | \n \xa0 個人倉儲: 40823103 repo \xa0 |個人網站: \xa0 40823103 site \xa0 | \xa0 \n \xa0 隊友倉儲: 40823107 repo \xa0 |隊友網站: \xa0 40823107 site \xa0 | \n stage1-ag8  \n 題目:機械手臂 \n 動機:爸爸搬重物很辛苦，希望他可以減輕負擔 \n', 'tags': '', 'url': 'stage1-ag8.html'}, {'title': 'w2', 'text': '第二周:繪製零件圖 \n', 'tags': '', 'url': 'w2.html'}, {'title': 'w3', 'text': '第三周:進行coppeliasim模擬 \n', 'tags': '', 'url': 'w3.html'}, {'title': 'w4', 'text': '第四周:報告 \n', 'tags': '', 'url': 'w4.html'}, {'title': 'stage2-ag8', 'text': '', 'tags': '', 'url': 'stage2-ag8.html'}, {'title': 'w5', 'text': '工作分配 \n \n \n \n 繪製零件圖 \n 40823103\xa0 呂霈瑜 \n \n \n 模擬 \n 40823107\xa0 吳嘉欣 \n \n \n 編輯小組網頁 \n 40523252\xa0 王彥筑 \n \n \n DPF製作 \n 40823154\xa0 張宸嘉 \n \n \n \n', 'tags': '', 'url': 'w5.html'}, {'title': 'w6', 'text': '討論主題 \n \n', 'tags': '', 'url': 'w6.html'}, {'title': 'w7', 'text': '繪製零件 \n 零件圖檔 \n https://drive.google.com/drive/folders/1kBoycxcgq9d9vfMPk1pvDeQB9tQVmtWk?usp=sharing \n', 'tags': '', 'url': 'w7.html'}, {'title': 'w8', 'text': '心得 \n', 'tags': '', 'url': 'w8.html'}, {'title': 'w9', 'text': '報告 \n 2021-協同產品設計實習-stage2-ag8 \n 倉儲: \xa0 https://github.com/40823107/stage2-ag8 \n 網站: \xa0 https://40523252.github.io/stage2-ag8/content/index.html \n reveal: \xa0 https://40523252.github.io/stage2-ag8/reveal/index.html#/ \n pdf:\xa0 https://drive.google.com/file/d/1jOrYFPWgUcYDd08cUq1HYgMX8eIQJq8E/view?usp=sharing \n \n YouTube: \n \n   1. \n 2. \n 3. \n 4. \n 5. \n \n', 'tags': '', 'url': 'w9.html'}, {'title': 'stage3-ag3', 'text': '第三組 \n 組長: \n 1.林郁凱 40823119 \n 組員: \n 2.苏鷺瑋 40823150 \n 3.呂霈瑜 40823103 \n 4.吳嘉欣 40823107 \n 5.張宸嘉 40823154 \n 6.王彥筑 40523252 \n', 'tags': '', 'url': 'stage3-ag3.html'}, {'title': 'w10', 'text': '建立分組倉儲,分組網頁 \n 倉儲 \n https://github.com/40823103/stage3-ag3 \n 網頁 gitlab \n https://40823103.gitlab.io/stage3-ag3/content/Task1.html \n', 'tags': '', 'url': 'w10.html'}, {'title': 'TASK1', 'text': 'stage3_ag1| 網站 | 倉儲 \n 40823131|網址: 40823131 |倉儲: 40823131 \n a40823112|網址: a40823112 |倉儲: a40823112 \n 40823123|網址: 40823123 |倉儲: 40823123 \n 40823145|網址: 40823145 |倉儲: 40823145 \n 40823136|網址: 40823136 |倉儲: 40823136 \n 40823109|網址: 40823109 |倉儲: 40823109 \n 40823116|網址: 40823116 |倉儲: 40823116 \n 40823108|網址: 40823108 |倉儲: 40823108 \n stage3_ag2| 網站 | 倉儲 \n 40823151|網址: 40823151 |倉儲: 40823151 \n 40623121|網址: 40623121 |倉儲: 40623121 \n 40871106|網址: 40871106 |倉儲: 40871106 \n 40823102|網址: 40823102 |倉儲: 40823102 \n 40823104|網址: 40823104 |倉儲: 40823104 \n 40823106|網址: 40823106 |倉儲: 40823106 \n 40823101|網址: 40823101 |倉儲: 40823101 \n 40823132|網址: 40823132 |倉儲: 40823132 \n stage3_ag3| 網站 | 倉儲 \n 40823119|網址: 40823119 |倉儲: 40823119 \n 40823150|網址: 40823150 |倉儲: 40823150 \n 40823103|網址: 40823103 |倉儲: 40823103 \n 40823107|網址: 40823107 |倉儲: 40823107 \n 40523252|網址: 40523252 |倉儲: 40523252 \n 40823154|網址: 40823154 |倉儲: 40823154 \n stage3_ag4| 網站 | 倉儲 \n 40823142|網址: 40823142 |倉儲: 40823142 \n 40823144|網址: 40823144 |倉儲: 40823144 \n 40823127|網址: 40823127 |倉儲: 40823127 \n 40823148|網址: 40823148 |倉儲: 40823148 \n 40823121|網址: 40823121 |倉儲: 40823121 \n 40823135|網址: 40823135 |倉儲: 40823135 \n 40823114|網址: 40823114 |倉儲: 40823114 \n 40823146|網址: 40823146 |倉儲: 40823146 \n stage3_ag5| 網站 | 倉儲 \n 40823111|網址: 40823111 |倉儲: 40823111 \n 40823115|網址: 40823115 |倉儲: 40823115 \n 40823128|網址: 40823128 |倉儲: 40823128 \n 40823120|網址: 40823120 |倉儲: 40823120 \n 40823140|網址: 40823140 |倉儲: 40823140 \n 40823124|網址: 40823124 |倉儲: 40823124 \n 40823139|網址: 40823139 |倉儲: 40823139 \n 40823126|網址: 40823126 |倉儲: 40823126 \n stage3_ag6| 網站 | 倉儲 \n 40823152|網址: 40823152 |倉儲: 40823152 \n 40823110|網址: 40823110 |倉儲: 40823110 \n 40823122|網址: 40823122 |倉儲: 40823122 \n 40823125|網址: 40823125 |倉儲: 40823125 \n 40823117|網址: 40823117 |倉儲: 40823117 \n 40823129|網址: 40823129 |倉儲: 40823129 \n 40823149|網址: 40823149 |倉儲: 40823149 \n 40823153|網址: 40823153 |倉儲: 40823153 \n \n 參考40823122修改 \n 讀取\xa0 stage3_2a.txt \n # open file, default is read mode, since txt content no chinese char4\n# no encoding = "UTF-08" is needed\nwith open("stage3_2a.txt") as fh:\n    # readlines will read into the whole line and put into list format 23\n    # has \\n at the end of each line 13\n    data = fh.readlines()\n    data = [a.replace(\'4823122\',\'40823122\') for a in data]\n    data = [c.replace(\'\\t\\t\\t\\t\',\'\') for c in data]\n    print(data)\n#print(len(data))1\nfor i in range(len(data)):\n    group = data[i].rstrip("\\n").split("\\t")\n    print(\'<p>\'+group[0]+\'|<a href="https://\'+group[1]+\'.github.io/stage3-ag\'+group[0][9]+\'">網站</a>|<a href="https://github.com/\'+group[2]+\'/stage3-ag\'+group[0][9]+\'">倉儲</a></p>\')\n# the following will use group data to generate needed html\n   \n    for j in range(2,18,2):\n        try:\n            print(\'<p>\'+group[j]+\'|網址:\'+\'<a href="https://\'+group[j]+\'.github.io/cd2021\'+\'">\'+group[j]+\'</a>\'+\'|倉儲:\'+\'<a href="https://github.com/\'+group[j]+\'/cd2021\'+\'">\'+group[j]+\'</a></p>\')\n        except:\n            continue \n \n \n 以下為每組亂數抽選 2 名組員的程式碼: \n # open file, default is read mode, since txt content no chinese char\n# no encoding = "UTF-8" is needed\nimport random\n \n# number of group menber to draw\nnum = 2\n \n# check if data is "" or not\ndef notVacant(data):\n    if data == "":\n        return False\n    else:\n        return True\n         \nwith open("stage3_2a.txt") as fh:\n    # readlines will read into the whole line and put into list format\n    # has \\n at the end of each line\n    data = fh.readlines()\n#print(len(data))\n# big group list\nbgroup = []\n# count from the second group member\nsgroup = []\nfor i in range(len(data)):\n    group = data[i].rstrip("\\n").split("\\t")\n    #print(group)\n    # use mem to count the total number of each group\n    mem = 0\n    # final group data\n    fgroup = []\n    # count from the second group member, eliminate the first element\n    sgroup = group[1:]\n    # get only the odd index number\n    igroup = [i for i in range(len(sgroup)) if i % 2 == 1]\n    for j in igroup:\n        # index starts from 0 which is j-1 when j=1\n        if notVacant(sgroup[j-1]) == True:\n            mem += 1\n            fgroup.append(sgroup[j-1])\n    print("group " + str(i+1) + ":" + str(mem))\n    # shuffle the fgroup list\n    random.shuffle(fgroup)\n    # draw num of member from final group list: fgroup\n    for k in range(num):\n        try:\n            print(fgroup[k])\n        except:\n            # num is greater than total number of this group\n            print("no such member")\n    # seperator\n    print("-"*20)\n# the following will use group data to generate needed html \n', 'tags': '', 'url': 'TASK1.html'}, {'title': 'TASK2', 'text': 'CoppeliaSim 場景 remote API 協同監控流程 \n \n \n', 'tags': '', 'url': 'TASK2.html'}, {'title': 'w11', 'text': '\n 參考的主題 \n https://weheartit.com/entry/301240914 \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'w11.html'}, {'title': 'w12', 'text': 'stage3-ag3直播討論 \n \n', 'tags': '', 'url': 'w12.html'}, {'title': 'w13', 'text': 'robodk測試 \n \n', 'tags': '', 'url': 'w13.html'}, {'title': 'w14', 'text': '', 'tags': '', 'url': 'w14.html'}, {'title': 'w15', 'text': '', 'tags': '', 'url': 'w15.html'}, {'title': '問題', 'text': '', 'tags': '', 'url': '問題.html'}, {'title': 'gogs', 'text': 'Github flaged 用戶, 利用\xa0 gogs \xa0 系統替代 \n 到 https://fossil.kmol.info:3443 \n 新增儲存庫 \n \n 然後到cd2021輸入 \n git remote add fossil https://fossil.kmol.info:3443/帳號/倉儲名稱.git \n git push fossil \n \n \n \n \n', 'tags': '', 'url': 'gogs.html'}, {'title': 'flag', 'text': '突然出現 Your avvount has been flagged. \n \n \n 老師建議將內容修改一下, 用現在的 .git 版本內容, 同步到一個同名的 gitlab 帳號下. \n 到 https://gitlab.com/ 註冊帳號 \n \n \n \n 2021年5月20日寄給github \n \n 2021年6月5日寄回 已解除flag \n \n \n \n \xa0 \n', 'tags': '', 'url': 'flag.html'}]};